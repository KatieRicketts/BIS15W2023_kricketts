ggmap(map) +
geom_point(data=penumbral_lunar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Penumbral Lunar Eclipse Locations", color="Date (month/day/year)")
} else {
ggmap(map) +
geom_point(data=app_lunar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="All Lunar Eclipse Locations", color="Date (month/day/year)")
}
} else {
if (input$z == "Annular") {
ggmap(map) +
geom_point(data=annular_solar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x="Longitude", y="Latitude", title="Annular Solar Eclipse Locations", color="Date (month/day/year)")
}
else if (input$z == "Total") {
ggmap(map) +
geom_point(data=total_solar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Total Solar Eclipse Locations", color="Date (month/day/year)")
}
else if (input$z == "Partial") {
ggmap(map) +
geom_point(data=partial_solar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Partial Solar Eclipse Locations", color="Date (month/day/year)")
}
else if (input$z == "Hybrid") {
ggmap(map) +
geom_point(data=hybrid_solar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Hybrid Solar Eclipse Locations", color="Date (month/day/year)")
} else {
ggmap(map) +
geom_point(data=app_solar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="All Solar Eclipse Locations", color="Date (month/day/year)")
}
}
})
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(skimr)
library(naniar)
library(here)
library(gtools)
library(RColorBrewer)
library(paletteer)
library(ggthemes)
library(shiny)
library(shinydashboard)
library(ggmap)
solar_eclipse <- read_csv(here("NASA lunar and solar eclipses", "solar.csv")) %>%
clean_names()
lunar_eclipse <- read_csv(here("NASA lunar and solar eclipses", "lunar.csv"), na=("-")) %>%
clean_names()
solar_dates <- solar_eclipse %>%
filter(!grepl("^-", calendar_date)) %>%
mutate(date = as.Date(calendar_date, format = "%Y %B %e")) %>%
select(!c(calendar_date)) %>%
mutate(year = lubridate::year(date),
month = lubridate::month(date),
day = lubridate::day(date))
solar_dates
lunar_dates <- lunar_eclipse %>%
filter(!grepl("^-", calendar_date)) %>%
mutate(date = as.Date(calendar_date, format = "%Y %B %e")) %>%
select(!c(calendar_date)) %>%
mutate(year = lubridate::year(date),
month = lubridate::month(date),
day = lubridate::day(date))
lunar_dates
lunar <- lunar_dates %>%
separate(latitude, into=c("lat", "NS"), sep="(?<=[0-9])(?=[A-Za-z])") %>%
separate(longitude, into=c("long", "EW"), sep="(?<=[0-9])(?=[A-Za-z])") %>%
mutate(lat_num = as.numeric(lat)) %>%
mutate(long_num = as.numeric(long)) %>%
mutate(latitude_value = ifelse(NS=="N", lat_num, -lat_num)) %>%
mutate(longitude_value = ifelse(EW=="E", long_num, -long_num))
lunar %>%
select(latitude_value, longitude_value)
solar <- solar_dates %>%
separate(latitude, into=c("lat", "NS"), sep="(?<=[0-9])(?=[A-Za-z])") %>%
separate(longitude, into=c("long", "EW"), sep="(?<=[0-9])(?=[A-Za-z])") %>%
mutate(lat_num = as.numeric(lat)) %>%
mutate(long_num = as.numeric(long)) %>%
mutate(latitude_value = ifelse(NS=="N", lat_num, -lat_num)) %>%
mutate(longitude_value = ifelse(EW=="E", long_num, -long_num))
solar %>%
select(latitude_value, longitude_value)
lat <- c(-80, 80)
long <- c(-180, 180)
bbox <- make_bbox(long, lat, f=0.05)
map <- get_map(bbox, maptype = "toner-lite", source = "stamen")
library(shiny)
ui <- dashboardPage(
skin = "blue",
dashboardHeader(title = "Peak Viewing Locations for Eclipses",
titleWidth = 400,
tags$li(class="dropdown",
tags$style(".skin-blue .main-header .logo {
background-color: #211212;
font-family: 'courier new';
font-size: 15px;
border-style: double;
border-color: white;
border-width: 0px 6px 0px 6px;
}
.skin-blue .main-header .logo:hover {background-color: #4a4040;
}
.skin-blue .main-header .navbar {
background-color: #241c1c;
}
")
)),
dashboardSidebar(
width = 400,
textInput("x", "Year", placeholder = "Type in a Year from 0-3000"),
selectInput("y", "Solar or Lunar Eclipses:", choices=c("Solar", "Lunar"), selected = "Solar"),
conditionalPanel(condition = "input.y == 'Solar'", radioButtons("z", label = "Which Type of Solar Eclipse", choices = c("Total", "Partial", "Annular", "Hybrid", "All Types"), selected = "All Types")
),
conditionalPanel(condition = "input.y == 'Lunar'", radioButtons("a", label="Which Type of Lunar Eclipse", choices = c("Total", "Penumbral", "Partial", "All Types"), selected = "All Types")
),
tags$aside(class="sidebar",
tags$style(".skin-blue .main-sidebar {
background-image:url('https://skyandtelescope.org/wp-content/uploads/2020-01-20_5e2622852658e_SolarEclipse-ST.jpg');
font-family: 'helvetica';
font-size: 12px;
color: #969696;
border-style: double;
border-color: white;
border-width: 0px 6px 6px 6px;
}
.skin-blue .main-sidebar .sidebar a:active{
background-color: coral;
}
"))
),
dashboardBody(plotOutput("map", width = "800px", height = "900px"), style="background-image: url('https://cdn.kqed.org/wp-content/uploads/sites/35/2022/11/RS59772_GettyImages-1397956564-qut.jpg');")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$map <- renderPlot({
app_lunar <- lunar %>%
mutate(year_char = as.character(year)) %>%
mutate(month_char = as.character(month)) %>%
mutate(day_char = as.character(day)) %>%
unite(date_char, "month_char", "day_char", "year_char", sep="/") %>%
filter(year == input$x)
app_solar <- solar %>%
mutate(year_char = as.character(year)) %>%
mutate(month_char = as.character(month)) %>%
mutate(day_char = as.character(day)) %>%
unite(date_char, "month_char", "day_char", "year_char", sep="/") %>%
filter(year==input$x)
# Defining Solar Eclipse Sub-types
annular_solar <- app_solar %>% filter(grepl("A", eclipse_type))
partial_solar <- app_solar %>% filter(grepl("P", eclipse_type))
total_solar <- app_solar %>% filter(grepl("T", eclipse_type))
hybrid_solar <- app_solar %>% filter(grepl("H", eclipse_type))
# Defining Lunar Eclipse Sub-types
total_lunar <- app_lunar %>% filter(grepl("T", eclipse_type))
penumbral_lunar <- app_lunar %>% filter(grepl("N", eclipse_type))
partial_lunar <- app_lunar %>% filter(grepl("P", eclipse_type))
if (input$y == "Lunar") {
if (input$a == "Total") {
ggmap(map) +
geom_point(data=total_lunar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Total Lunar Eclipse Locations", color="Date (month/day/year)")
}
else if (input$a == "Partial") {
ggmap(map) +
geom_point(data=partial_lunar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Partial Lunar Eclipse Locations", color="Date (month/day/year)")
}
else if (input$a == "Penumbral") {
ggmap(map) +
geom_point(data=penumbral_lunar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Penumbral Lunar Eclipse Locations", color="Date (month/day/year)")
} else {
ggmap(map) +
geom_point(data=app_lunar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="All Lunar Eclipse Locations", color="Date (month/day/year)")
}
} else {
if (input$z == "Annular") {
ggmap(map) +
geom_point(data=annular_solar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x="Longitude", y="Latitude", title="Annular Solar Eclipse Locations", color="Date (month/day/year)")
}
else if (input$z == "Total") {
ggmap(map) +
geom_point(data=total_solar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Total Solar Eclipse Locations", color="Date (month/day/year)")
}
else if (input$z == "Partial") {
ggmap(map) +
geom_point(data=partial_solar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Partial Solar Eclipse Locations", color="Date (month/day/year)")
}
else if (input$z == "Hybrid") {
ggmap(map) +
geom_point(data=hybrid_solar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Hybrid Solar Eclipse Locations", color="Date (month/day/year)")
} else {
ggmap(map) +
geom_point(data=app_solar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="All Solar Eclipse Locations", color="Date (month/day/year)")
}
}
})
}
shinyApp(ui, server)
solar <- solar_dates %>%
separate(latitude, into=c("lat", "NS"), sep="(?<=[0-9])(?=[A-Za-z])") %>%
separate(longitude, into=c("long", "EW"), sep="(?<=[0-9])(?=[A-Za-z])") %>%
mutate(lat_num = as.numeric(lat)) %>%
mutate(long_num = as.numeric(long)) %>%
mutate(latitude_value = ifelse(NS=="N", lat_num, -lat_num)) %>%
mutate(longitude_value = ifelse(EW=="E", long_num, -long_num))
solar %>%
select(latitude_value, longitude_value)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(skimr)
library(naniar)
library(here)
library(gtools)
library(RColorBrewer)
library(paletteer)
library(ggthemes)
library(shiny)
library(shinydashboard)
library(ggmap)
solar_eclipse <- read_csv(here("NASA lunar and solar eclipses", "solar.csv")) %>%
clean_names()
lunar_eclipse <- read_csv(here("NASA lunar and solar eclipses", "lunar.csv"), na=("-")) %>%
clean_names()
solar_dates <- solar_eclipse %>%
filter(!grepl("^-", calendar_date)) %>%
mutate(date = as.Date(calendar_date, format = "%Y %B %e")) %>%
select(!c(calendar_date)) %>%
mutate(year = lubridate::year(date),
month = lubridate::month(date),
day = lubridate::day(date))
solar_dates
lunar_dates <- lunar_eclipse %>%
filter(!grepl("^-", calendar_date)) %>%
mutate(date = as.Date(calendar_date, format = "%Y %B %e")) %>%
select(!c(calendar_date)) %>%
mutate(year = lubridate::year(date),
month = lubridate::month(date),
day = lubridate::day(date))
lunar_dates
lunar <- lunar_dates %>%
separate(latitude, into=c("lat", "NS"), sep="(?<=[0-9])(?=[A-Za-z])") %>%
separate(longitude, into=c("long", "EW"), sep="(?<=[0-9])(?=[A-Za-z])") %>%
mutate(lat_num = as.numeric(lat)) %>%
mutate(long_num = as.numeric(long)) %>%
mutate(latitude_value = ifelse(NS=="N", lat_num, -lat_num)) %>%
mutate(longitude_value = ifelse(EW=="E", long_num, -long_num))
lunar %>%
select(latitude_value, longitude_value)
solar <- solar_dates %>%
separate(latitude, into=c("lat", "NS"), sep="(?<=[0-9])(?=[A-Za-z])") %>%
separate(longitude, into=c("long", "EW"), sep="(?<=[0-9])(?=[A-Za-z])") %>%
mutate(lat_num = as.numeric(lat)) %>%
mutate(long_num = as.numeric(long)) %>%
mutate(latitude_value = ifelse(NS=="N", lat_num, -lat_num)) %>%
mutate(longitude_value = ifelse(EW=="E", long_num, -long_num))
solar %>%
select(latitude_value, longitude_value)
lat <- c(-80, 80)
long <- c(-180, 180)
bbox <- make_bbox(long, lat, f=0.05)
map <- get_map(bbox, maptype = "toner-lite", source = "stamen")
library(shiny)
ui <- dashboardPage(
skin = "blue",
dashboardHeader(title = "Peak Viewing Locations for Eclipses",
titleWidth = 400,
tags$li(class="dropdown",
tags$style(".skin-blue .main-header .logo {
background-color: #211212;
font-family: 'courier new';
font-size: 15px;
border-style: double;
border-color: white;
border-width: 0px 6px 0px 6px;
}
.skin-blue .main-header .logo:hover {background-color: #4a4040;
}
.skin-blue .main-header .navbar {
background-color: #241c1c;
}
")
)),
dashboardSidebar(
width = 400,
textInput("x", "Year", placeholder = "Type in a Year from 0-3000"),
selectInput("y", "Solar or Lunar Eclipses:", choices=c("Solar", "Lunar"), selected = "Solar"),
conditionalPanel(condition = "input.y == 'Solar'", radioButtons("z", label = "Which Type of Solar Eclipse", choices = c("Total", "Partial", "Annular", "Hybrid", "All Types"), selected = "All Types")
),
conditionalPanel(condition = "input.y == 'Lunar'", radioButtons("a", label="Which Type of Lunar Eclipse", choices = c("Total", "Penumbral", "Partial", "All Types"), selected = "All Types")
),
tags$aside(class="sidebar",
tags$style(".skin-blue .main-sidebar {
background-image:url('https://skyandtelescope.org/wp-content/uploads/2020-01-20_5e2622852658e_SolarEclipse-ST.jpg');
font-family: 'helvetica';
font-size: 12px;
color: #969696;
border-style: double;
border-color: white;
border-width: 0px 6px 6px 6px;
}
.skin-blue .main-sidebar .sidebar a:active{
background-color: coral;
}
"))
),
dashboardBody(plotOutput("map", width = "800px", height = "900px"), style="background-image: url('https://cdn.kqed.org/wp-content/uploads/sites/35/2022/11/RS59772_GettyImages-1397956564-qut.jpg');")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$map <- renderPlot({
app_lunar <- lunar %>%
mutate(year_char = as.character(year)) %>%
mutate(month_char = as.character(month)) %>%
mutate(day_char = as.character(day)) %>%
unite(date_char, "month_char", "day_char", "year_char", sep="/") %>%
filter(year == input$x)
app_solar <- solar %>%
mutate(year_char = as.character(year)) %>%
mutate(month_char = as.character(month)) %>%
mutate(day_char = as.character(day)) %>%
unite(date_char, "month_char", "day_char", "year_char", sep="/") %>%
filter(year==input$x)
# Defining Solar Eclipse Sub-types
annular_solar <- app_solar %>% filter(grepl("A", eclipse_type))
partial_solar <- app_solar %>% filter(grepl("P", eclipse_type))
total_solar <- app_solar %>% filter(grepl("T", eclipse_type))
hybrid_solar <- app_solar %>% filter(grepl("H", eclipse_type))
# Defining Lunar Eclipse Sub-types
total_lunar <- app_lunar %>% filter(grepl("T", eclipse_type))
penumbral_lunar <- app_lunar %>% filter(grepl("N", eclipse_type))
partial_lunar <- app_lunar %>% filter(grepl("P", eclipse_type))
if (input$y == "Lunar") {
if (input$a == "Total") {
ggmap(map) +
geom_point(data=total_lunar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Total Lunar Eclipse Locations", color="Date (month/day/year)")
}
else if (input$a == "Partial") {
ggmap(map) +
geom_point(data=partial_lunar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Partial Lunar Eclipse Locations", color="Date (month/day/year)")
}
else if (input$a == "Penumbral") {
ggmap(map) +
geom_point(data=penumbral_lunar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Penumbral Lunar Eclipse Locations", color="Date (month/day/year)")
} else {
ggmap(map) +
geom_point(data=app_lunar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="All Lunar Eclipse Locations", color="Date (month/day/year)")
}
} else {
if (input$z == "Annular") {
ggmap(map) +
geom_point(data=annular_solar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x="Longitude", y="Latitude", title="Annular Solar Eclipse Locations", color="Date (month/day/year)")
}
else if (input$z == "Total") {
ggmap(map) +
geom_point(data=total_solar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Total Solar Eclipse Locations", color="Date (month/day/year)")
}
else if (input$z == "Partial") {
ggmap(map) +
geom_point(data=partial_solar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Partial Solar Eclipse Locations", color="Date (month/day/year)")
}
else if (input$z == "Hybrid") {
ggmap(map) +
geom_point(data=hybrid_solar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="Hybrid Solar Eclipse Locations", color="Date (month/day/year)")
} else {
ggmap(map) +
geom_point(data=app_solar, aes(longitude_value, latitude_value, color=date_char), size=8) +
labs(x= "Longitude", y= "Latitude", title="All Solar Eclipse Locations", color="Date (month/day/year)")
}
}
})
}
shinyApp(ui, server)
solar_cent <- solar %>%
mutate(century_char = case_when(year >= 0 & year <100 ~ "1",
year >= 100 & year <200 ~ "2",
year >= 200 & year <300 ~ "3",
year >= 300 & year <400 ~ "4",
year >= 400 & year <500 ~ "5",
year >= 500 & year <600 ~ "6",
year >= 600 & year <700 ~ "7",
year >= 700 & year <800 ~ "8",
year >= 800 & year <900 ~ "9",
year >= 900 & year <1000 ~ "10",
year >= 1000 & year <1100 ~ "11",
year >= 1100 & year <1200 ~ "12",
year >= 1200 & year <1300 ~ "13",
year >= 1300 & year <1400 ~ "14",
year >= 1400 & year <1500 ~ "15",
year >= 1500 & year <1600 ~ "16",
year >= 1600 & year <1700 ~ "17",
year >= 1700 & year <1800 ~ "18",
year >= 1800 & year <1900 ~ "19",
year >= 1900 & year <2000 ~ "20",
year >= 2000 & year <2100 ~ "21",
year >= 2100 & year <2200 ~ "22",
year >= 2200 & year <2300 ~ "23",
year >= 2300 & year <2400 ~ "24",
year >= 2400 & year <2500 ~ "25",
year >= 2500 & year <2600 ~ "26",
year >= 2600 & year <2700 ~ "27",
year >= 2700 & year <2800 ~ "28",
year >= 2800 & year <2900 ~ "29",
year >= 2900 & year <3000 ~ "30"))
solar_cent
solar_cent$century = as.numeric(solar_cent$century_char)
solar_cent %>%
ggplot(aes(x = century, fill = eclipse_type))+
geom_bar()
solar_cent %>%
mutate(eclipse_type_broad = case_when(grepl("A", eclipse_type) ~ "A",
grepl("H", eclipse_type) ~ "H",
grepl("P", eclipse_type) ~ "P",
grepl("T", eclipse_type) ~ "T")) %>%
ggplot(aes(x = century, fill = eclipse_type_broad))+
geom_bar()+
labs(title="Proportions of Solar Eclipse Types",
x="Solar Eclipse Type",
y="Count",
fill="Solar Eclipse Type")+
scale_fill_brewer(name = "Solar Eclipse Type", labels = c("Annular", "Hybrid (Annular and Total)", "Partial", "Total"), palette = "RdYlBu")
lunar_cent <- lunar %>%
mutate(century_char = case_when(year >= 0 & year <100 ~ "1",
year >= 100 & year <200 ~ "2",
year >= 200 & year <300 ~ "3",
year >= 300 & year <400 ~ "4",
year >= 400 & year <500 ~ "5",
year >= 500 & year <600 ~ "6",
year >= 600 & year <700 ~ "7",
year >= 700 & year <800 ~ "8",
year >= 800 & year <900 ~ "9",
year >= 900 & year <1000 ~ "10",
year >= 1000 & year <1100 ~ "11",
year >= 1100 & year <1200 ~ "12",
year >= 1200 & year <1300 ~ "13",
year >= 1300 & year <1400 ~ "14",
year >= 1400 & year <1500 ~ "15",
year >= 1500 & year <1600 ~ "16",
year >= 1600 & year <1700 ~ "17",
year >= 1700 & year <1800 ~ "18",
year >= 1800 & year <1900 ~ "19",
year >= 1900 & year <2000 ~ "20",
year >= 2000 & year <2100 ~ "21",
year >= 2100 & year <2200 ~ "22",
year >= 2200 & year <2300 ~ "23",
year >= 2300 & year <2400 ~ "24",
year >= 2400 & year <2500 ~ "25",
year >= 2500 & year <2600 ~ "26",
year >= 2600 & year <2700 ~ "27",
year >= 2700 & year <2800 ~ "28",
year >= 2800 & year <2900 ~ "29",
year >= 2900 & year <3000 ~ "30"))
lunar_cent
lunar_cent$century = as.numeric(lunar_cent$century_char)
lunar_cent %>%
ggplot(aes(x = century, fill = eclipse_type))+
geom_bar()
lunar_cent %>%
mutate(eclipse_type_broad = case_when(grepl("N", eclipse_type) ~ "N",
grepl("P", eclipse_type) ~ "P",
grepl("T", eclipse_type) ~ "T")) %>%
ggplot(aes(x = century, fill = eclipse_type_broad))+
geom_bar()+
labs(title="Proportions of Lunar Eclipse Types",
x="Lunar Eclipse Type",
y="Count",
fill="Lunar Eclipse Type")+
scale_fill_brewer(name = "Lunar Eclipse Type", labels = c("Penumbral", "Partial", "Total"), palette = "RdYlBu")
solar %>%
mutate(eclipse_type_broad = case_when(grepl("A", eclipse_type) ~ "A",
grepl("H", eclipse_type) ~ "H",
grepl("P", eclipse_type) ~ "P",
grepl("T", eclipse_type) ~ "T")) %>%
ggplot(aes(x=eclipse_type_broad, fill=eclipse_type_broad))+
geom_bar()+
labs(title="Proportions of Solar Eclipse Types",
x="Solar Eclipse Type",
y="Count",
fill="Solar Eclipse Type")+
scale_fill_brewer(name = "Solar Eclipse Type", labels = c("Annular", "Hybrid (Annular and Total)", "Partial", "Total"), palette = "RdYlBu")
lunar %>%
mutate(eclipse_type_broad = case_when(grepl("N", eclipse_type) ~ "N",
grepl("P", eclipse_type) ~ "P",
grepl("T", eclipse_type) ~ "T")) %>%
ggplot(aes(x=eclipse_type_broad, fill=eclipse_type_broad))+
geom_bar()+
labs(title="Proportions of Lunar Eclipse Types",
x="Lunar Eclipse Type",
y="Count",
fill="Lunar Eclipse Type")+
scale_fill_brewer(name = "Lunar Eclipse Type", labels = c("Penumbral", "Partial", "Total"), palette = "RdYlBu")
